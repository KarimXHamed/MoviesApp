//
//  ViewController.swift
//  flashCardApp
//
//  Created by karim hamed ashour on 10/7/24.
//

import UIKit

class ViewController: UIViewController,UITableViewDelegate,UITableViewDataSource,UISearchBarDelegate{
    
    
    
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var searchBar: UINavigationItem!
    let viewModel=FetchViewModel()
    var flashCards:[Content]!
    var quizes=[[Quiz]]()
    var currentQuiz=[Quiz]()
    var filteredTopics:[String]=[]
    var searching=false
    var links=["https://the-trivia-api.com/v2/questions?categories=sports&limit=10","https://the-trivia-api.com/v2/questions?categories=music&limit=10","https://the-trivia-api.com/v2/questions?categories=history&limit=10","https://the-trivia-api.com/v2/questions?categories=arts_and_literature&limit=10","https://the-trivia-api.com/v2/questions?categories=general_knowledge&limit=10","https://the-trivia-api.com/v2/questions?categories=film&limit=10"]
   


    var topics:[String]=["Sports","Animals","History","Art","Math","Film"]
    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.delegate=self
        tableView.dataSource=self
        for link in links{
            viewModel.fetchQuiz(link: link) {[weak self] quizes in
                self?.quizes.append(quizes)
                DispatchQueue.main.asyncAfter(deadline: .now() + 2.0){
                    self?.tableView.reloadData()
                } 
                print(self?.quizes)
            }
           
        }
        
        print(quizes)
    }
    func ahmedG(){
        DispatchQueue.main.async{ self.tableView.reloadData()}
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

       
        currentQuiz=quizes[indexPath.row]
        let Vc = self.storyboard?.instantiateViewController(withIdentifier: "quizViewController") as! QuizViewController
        Vc.flashCards=currentQuiz
        self.navigationController?.pushViewController(Vc, animated: true)
        
    }
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        filteredTopics=topics.filter({$0.prefix(searchText.count)==searchText.lowercased()})
        searching = true
        tableView.reloadData()
        
    }
    private func filterTopics(_ query:String){
        
        filteredTopics.removeAll()
        for String in topics{
            if String.lowercased().starts(with: query.lowercased()){
                filteredTopics.append(String)
            }
        }
        tableView.reloadData()
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if quizes.isEmpty {return 0}
        else{
            if searching{
                return filteredTopics.count
            }else{
                return topics.count
            }
        }
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
       let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        
        if searching{
            cell.textLabel?.text=filteredTopics[indexPath.row]
        }else{
            let name = quizes[indexPath.row][0]
            cell.textLabel?.text=name.category.replacingOccurrences(of: "_", with: " ")
        }
        return cell
    }
    

}

    
        
    
    

