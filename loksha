func fetchLanguageModel() {
    let db = Firestore.firestore()
    let docRef = db.collection("french").document("myLanguageModel")

    docRef.getDocument { (document, error) in
        if let error = error {
            print("Error fetching document: \(error)")
        } else if let document = document, Â  
 let data = document.data() {
            do {
                let jsonData = try JSONSerialization.data(with: data, options: [])
                let languageModel = try JSONDecoder().decode(LanguageModel.self, from: jsonData)
                print("Language model fetched successfully: \(languageModel)")
            } catch {
                print("Error decoding language model: \(error)")
            }
        } else {
            print("Document does not exist")
        }
    }
}
    func storeLanguageModel(languageModel: LanguageModel) {
       
        let db = Firestore.firestore()
      
        let docRef = db.collection("french").document("myLanguageModel")
      
        do {
            let data = try JSONEncoder().encode(languageModel)
       
            let json = try JSONSerialization.jsonObject(with: data, options: []) as? [String:Any]
            
            if let json = json {
                try docRef.setData(json, merge: true)
            
                print("Language model stored successfully!")
           
            } else {
                
                print("Error converting data to JSON")
                
            }
        } catch {
            print("Error encoding language model: \(error)")
        }
    }
import UIKit

class FlashcardView: UIView {

        
        var frontText="???"
        var backText="???"
        

        
        @IBOutlet weak var textLabel: UILabel!
        
        @IBOutlet weak var submitButton: UIButton!
        @IBOutlet weak var FlashCardTextField: UITextField!
    @IBOutlet weak var flashcardLabel: UILabel!
    var correctAnswer:String?
        var delegate:MyContentViewController!
        override func layoutSubviews() {
            super.layoutSubviews()
            for subview in subviews{
                if let contentView = subview as? UIView{
                    contentView.frame = self.bounds
                }
            }
        }
        
            override func awakeFromNib() {
                super.awakeFromNib()
                textLabel.text=frontText
            }
            override init(frame: CGRect) {
                super.init(frame: frame)
                self.commonInit()
                
            }
            
            required init?(coder: NSCoder) {
                super.init(coder: coder)
                self.commonInit()
                
            }
         
            
            private func commonInit() {
                let bundle = Bundle.main
                if let viewToAdd = bundle.loadNibNamed("Flashcard", owner: self, options: nil) {
                    for view in viewToAdd {
                        if let contentView = view as? UIView {
                            
                            addSubview(contentView)
                            
                            
                            contentView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
                            contentView.layer.cornerRadius = 25
                            contentView.layer.masksToBounds = true
                            submitButton.addTarget(self, action: #selector(submitIsTapped), for: .touchUpInside)
                                
                            return
                        }
                    }
                }
            
            }

            @objc func submitIsTapped(_ sender:UIButton){
                guard let userAnswer = FlashCardTextField.text, let correctAnswer = correctAnswer else {return}
                if  userAnswer.lowercased() == correctAnswer.lowercased(){
                    UIView.transition(with: self, duration: 0.5, options: .transitionFlipFromRight){
                        self.flashcardLabel.backgroundColor = .green
                        self.textLabel.text="Well Done!!"
                        self.FlashCardTextField.isHidden=true
                        self.submitButton.isHidden=true
//                        self.delegate.updateScore(by: 10)
                        
                    }
                }else{
                    UIView.transition(with: self, duration: 0.5, options: .transitionFlipFromRight){
                        self.textLabel.text="Wrong!!"
                        self.flashcardLabel.backgroundColor = .red
                        self.FlashCardTextField.isHidden=true
                        self.submitButton.isHidden=true
                    }
                }
            }
        }

