   override func viewDidLoad() {
        super.viewDidLoad()

        // Initialize the Supabase client
        client = SupabaseClient(supabaseURL: supabaseURL, supabaseKey: supabaseKey)
        
        fetchLanguageModels { result in
            switch result {
            case .success(let models):
                print("Fetched models: \(models)")
                // Update your UI or data source here
            case .failure(let error):
                print("Error fetching models: \(error)")
            }
        }
    }

    // Fetch data from the "language_models" table
    func fetchLanguageModels(completion: @escaping (Result<[LanguageModel], Error>) -> Void) {
        // Adjusted to handle the result with a closure
        client.from("language_models")
            .select()
            .execute { result in // The trailing closure handles the result of the query
                switch result {
                case .success(let response):
                    do {
                        // Decode the response data into [LanguageModel]
                        if let data = response.data as? [[String: Any]] {
                            let jsonData = try JSONSerialization.data(withJSONObject: data, options: [])
                            let decodedModels = try JSONDecoder().decode([LanguageModel].self, from: jsonData)
                            completion(.success(decodedModels))
                        } else {
                            completion(.failure(NSError(domain: "", code: -1, userInfo: [NSLocalizedDescriptionKey: "No data found"])))
                        }
                    } catch {
                        completion(.failure(error))
                    }
                case .failure(let error):
                    completion(.failure(error))
                }
            }
    }
}
